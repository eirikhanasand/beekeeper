services:
  postgres:
    image: postgres:15
    container_name: beekeeper_database
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-beekeeper}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB:-beekeeper}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U beekeeper -d beekeeper"]
      interval: 5s
      retries: 5

  beekeeper_api:
    container_name: beekeeper_api 
    image: beekeeper-api
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    command: sh -c "./scripts/init.sh"
    depends_on:
      - postgres
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://api.beekeeper.login.no/api}
      BROWSER_API_URL: ${BROWSER_API_URL:-https://api.beekeeper.login.no/api}
      DOCTL_TOKEN: ${DOCTL_TOKEN}
      PRIVATE_TOKEN: ${PRIVATE_TOKEN}
      DB: ${DB}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      BASE_URL: ${BASE_URL}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      REDIRECT_URI: ${REDIRECT_URI}
      BEEKEEPER_URL: ${BEEKEEPER_URL}
      AUTHENTIK_TOKEN: ${AUTHENTIK_TOKEN}
      BTG_TOKEN: ${BTG_TOKEN}
      WEBHOOK_URL: ${WEBHOOK_URL}
      CRITICAL_DEVELOPMENT_ROLE: ${CRITICAL_DEVELOPMENT_ROLE}
      CRITICAL_ROLE: ${CRITICAL_ROLE}

    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/api"]
      interval: 5s
      retries: 5

  beekeeper_frontend:
    container_name: beekeeper_frontend
    image: beekeeper-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
        NEXT_PUBLIC_BROWSER_API: ${NEXT_PUBLIC_BROWSER_API}
        NEXT_PUBLIC_CDN: ${NEXT_PUBLIC_CDN}
        NEXT_PUBLIC_DEBUG: ${NEXT_PUBLIC_DEBUG}
    ports:
      - "3000:3000"
    depends_on:
      - beekeeper_api
    environment:
      # DigitalOcean
      DOCTL_TOKEN: ${DOCTL_TOKEN}

      # Gitlab
      PRIVATE_TOKEN: ${PRIVATE_TOKEN}

      # PSQL db
      DB: ${DB}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      # Authentik integration
      BASE_URL: ${BASE_URL}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      REDIRECT_URI: ${REDIRECT_URI}
      BEEKEEPER_URL: ${BEEKEEPER_URL}
      AUTHENTIK_TOKEN: ${AUTHENTIK_TOKEN}

volumes:
  postgres_data:
